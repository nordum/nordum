// Reset and normalize styles
// Based on modern CSS reset principles

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

html {
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  tab-size: 4;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: var(--font-family-primary, 'Inter', system-ui, sans-serif);
  color: var(--color-text-primary);
  background-color: var(--color-bg-primary);
}

// Remove list styles on ul, ol elements with a list role
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

// Set core body defaults
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

// A elements that don't have a class get default styles
a:not([class]) {
  text-decoration-skip-ink: auto;
}

// Make images easier to work with
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

// Inherit fonts for inputs and buttons
input,
button,
textarea,
select {
  font: inherit;
}

// Remove all animations, transitions and smooth scroll for people that prefer not to see them
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// Remove built-in form typography styles
input, button, textarea, select {
  font: inherit;
}

// Avoid text overflows
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

// Create a root stacking context
#root, #__next {
  isolation: isolate;
}

// Focus visible polyfill
.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

// Screen reader only class
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Skip link
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: var(--color-primary);
  color: var(--color-text-inverse);
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  z-index: 1000;
  
  &:focus {
    top: 6px;
  }
}

// Basic table styles
table {
  border-collapse: collapse;
  border-spacing: 0;
}

// Button reset
button {
  background: none;
  border: none;
  cursor: pointer;
  
  &:disabled {
    cursor: not-allowed;
  }
}

// Form elements
fieldset {
  border: none;
  padding: 0;
  margin: 0;
}

legend {
  padding: 0;
  display: table;
}

// Address styling
address {
  font-style: normal;
}

// Quote styling
blockquote,
q {
  quotes: none;
  
  &:before,
  &:after {
    content: '';
    content: none;
  }
}

// Horizontal rule
hr {
  border: 0;
  height: 1px;
  background: var(--color-border);
  margin: 1rem 0;
}

// Mark/highlight
mark {
  background-color: #ffff00;
  color: #000000;
}

// Small text
small {
  font-size: 0.875em;
}

// Subscript and superscript
sub,
sup {
  font-size: 0.75em;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

// Code and preformatted text
code,
kbd,
samp,
pre {
  font-family: var(--font-family-mono);
  font-size: 0.875em;
}

pre {
  overflow-x: auto;
  white-space: pre;
}

// Definition lists
dd {
  margin-left: 0;
}

// Details and summary
details {
  display: block;
}

summary {
  display: list-item;
  cursor: pointer;
}

// Template
template {
  display: none;
}

// Hidden attribute
[hidden] {
  display: none !important;
}

// High contrast mode support
@media (prefers-contrast: high) {
  * {
    border-color: CanvasText;
  }
}

// Print styles
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}